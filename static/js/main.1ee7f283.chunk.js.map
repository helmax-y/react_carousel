{"version":3,"sources":["components/Carousel.js","components/Sliders.js","components/Form.js","App.js","index.js"],"names":["Carousel","_ref","images","itemWidth","react_default","a","createElement","className","map","image","key","src","width","alt","Sliders","showPrevious","showNext","prevClass","nextClass","type","onClick","Form","frameSize","step","isInfinite","applyItemWidth","resetItemWidth","applyFrameSize","applyStep","resetAll","applyInfinity","disapplyInfinity","_useState","useState","_useState2","Object","slicedToArray","isAddDisabled","disableAdd","onSubmit","event","preventDefault","htmlFor","id","placeholder","min","max","onChange","target","value","disabled","option","App","currentI","setCurrentI","_useState3","_useState4","setItemWidth","_useState5","_useState6","setFrameSize","_useState7","_useState8","setStep","_useState9","_useState10","isPrevDisabled","disablePrev","_useState11","_useState12","isNextDisabled","disableNext","_useState13","_useState14","setInfinity","prevButtonClass","ClassNames","buttons__button","buttons__button--disabled","nextButtonClass","components_Carousel","filter","_","i","concat","toConsumableArray","components_Sliders","from","to","components_Form","document","querySelector","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.1ee7f283.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Carousel = ({ images, itemWidth }) => (\n  <section className=\"carousel\">\n    {images.map(image => (\n      <img\n        key={image}\n        src={image}\n        width={itemWidth}\n        alt=\"Smiley face\"\n        className=\"carousel__img\"\n      />\n    ))}\n  </section>\n);\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Sliders = ({\n  showPrevious,\n  showNext,\n  prevClass,\n  nextClass,\n}) => (\n  <section className=\"buttons\">\n    <button\n      type=\"button\"\n      className={prevClass}\n      onClick={showPrevious}\n    >\n      &lt;- Previous\n    </button>\n\n    <button\n      type=\"button\"\n      className={nextClass}\n      onClick={showNext}\n    >\n      Next -&gt;\n    </button>\n  </section>\n);\n\nSliders.propTypes = {\n  showPrevious: PropTypes.func.isRequired,\n  showNext: PropTypes.func.isRequired,\n  prevClass: PropTypes.string.isRequired,\n  nextClass: PropTypes.string.isRequired,\n};\n\nexport default Sliders;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({\n  itemWidth,\n  frameSize,\n  step,\n  isInfinite,\n  applyItemWidth,\n  resetItemWidth,\n  applyFrameSize,\n  applyStep,\n  resetAll,\n  applyInfinity,\n  disapplyInfinity,\n}) => {\n  const [isAddDisabled, disableAdd] = useState(true);\n\n  return (\n    <form className=\"form\" onSubmit={event => event.preventDefault()}>\n      <label htmlFor=\"itemWidth\">\n        Enter preferred width of each item in pixels (30 - 130)\n        <br />\n        <input\n          id=\"itemWidth\"\n          type=\"number\"\n          placeholder=\"130\"\n          min=\"30\"\n          max=\"130\"\n          onChange={(event) => {\n            if (event.target.value >= 30 && event.target.value <= 130) {\n              disableAdd(false);\n            } else {\n              disableAdd(true);\n            }\n          }}\n        />\n\n        <button\n          type=\"button\"\n          className=\"form__button\"\n          disabled={isAddDisabled}\n          onClick={() => {\n            disableAdd(true);\n            applyItemWidth();\n          }}\n        >\n          OK\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"form__button\"\n          disabled={itemWidth === 130}\n          onClick={resetItemWidth}\n        >\n          Default\n        </button>\n      </label>\n      <br />\n\n      <label htmlFor=\"frameSize\">\n        Choose how many images would you like to display at the same time\n        <br />\n        <select\n          id=\"frameSize\"\n          value={frameSize}\n          onChange={applyFrameSize}\n        >\n          {[1, 2, 3, 4, 5].map(option => (\n            <option key={option}>{option}</option>\n          ))}\n        </select>\n      </label>\n      <br />\n\n      <label htmlFor=\"step\">\n        Choose how many images would you like to scroll per click\n        <br />\n        <select\n          id=\"step\"\n          value={step}\n          onChange={applyStep}\n        >\n          {[1, 2, 3, 4, 5].map(option => (\n            <option key={option}>{option}</option>\n          ))}\n        </select>\n      </label>\n      <br />\n\n      <button\n        type=\"button\"\n        className=\"form__lower-button\"\n        disabled={itemWidth === 130 && frameSize === 3 && step === 3}\n        onClick={resetAll}\n      >\n        Set all to default\n      </button>\n\n      {isInfinite ? (\n        <button\n          type=\"button\"\n          className=\"form__lower-button\"\n          onClick={disapplyInfinity}\n        >\n          Disable infinity mode\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"form__lower-button\"\n          onClick={applyInfinity}\n        >\n          Enable infinity mode\n        </button>\n      )}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  itemWidth: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  isInfinite: PropTypes.bool.isRequired,\n  applyItemWidth: PropTypes.func.isRequired,\n  resetItemWidth: PropTypes.func.isRequired,\n  applyFrameSize: PropTypes.func.isRequired,\n  applyStep: PropTypes.func.isRequired,\n  resetAll: PropTypes.func.isRequired,\n  applyInfinity: PropTypes.func.isRequired,\n  disapplyInfinity: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport ClassNames from 'classnames';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport Sliders from './components/Sliders';\nimport Form from './components/Form';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App = () => {\n  const [currentI, setCurrentI] = useState([0, 3]);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [isPrevDisabled, disablePrev] = useState(true);\n  const [isNextDisabled, disableNext] = useState(false);\n  const [isInfinite, setInfinity] = useState(false);\n\n  const showPrevious = () => {\n    if (isInfinite) {\n      let from = currentI[0];\n      let to = currentI[1];\n\n      if (from - step < 0 || to - step < 0) {\n        if (from - step < 0) {\n          from = 10 + (from - step);\n        } else {\n          from -= step;\n        }\n\n        if (to - step < 0) {\n          to = 10 + (to - step);\n        } else {\n          to -= step;\n        }\n\n        setCurrentI([from, to]);\n      } else {\n        setCurrentI([from - step, to - step]);\n      }\n    } else {\n      disableNext(false);\n      if (currentI[0] - step <= 0) {\n        disablePrev(true);\n        setCurrentI([0, frameSize]);\n      } else {\n        setCurrentI([currentI[0] - step, currentI[1] - step]);\n      }\n    }\n  };\n\n  const showNext = () => {\n    if (isInfinite) {\n      let from = currentI[0];\n      let to = currentI[1];\n\n      if (from + step > 9 || to + step > 9) {\n        if (from + step > 9) {\n          from += step - 10;\n        } else {\n          from += step;\n        }\n\n        if (to + step > 9) {\n          to += step - 10;\n        } else {\n          to += step;\n        }\n\n        setCurrentI([from, to]);\n      } else {\n        setCurrentI([from + step, to + step]);\n      }\n    } else {\n      disablePrev(false);\n      if (currentI[1] + step >= 10) {\n        disableNext(true);\n        setCurrentI([10 - frameSize, 10]);\n      } else {\n        setCurrentI([currentI[0] + step, currentI[1] + step]);\n      }\n    }\n  };\n\n  const prevButtonClass = ClassNames(\n    { buttons__button: true },\n    { 'buttons__button--disabled': isPrevDisabled }\n  );\n\n  const nextButtonClass = ClassNames(\n    { buttons__button: true },\n    { 'buttons__button--disabled': isNextDisabled }\n  );\n\n  const applyItemWidth = () => {\n    setItemWidth(+document.querySelector('#itemWidth').value);\n  };\n\n  const resetItemWidth = () => {\n    setItemWidth(130);\n    document.querySelector('#itemWidth').value = 130;\n  };\n\n  const applyFrameSize = (event) => {\n    !isInfinite && disablePrev(true);\n    !isInfinite && disableNext(false);\n    setFrameSize(+event.target.value);\n    setCurrentI([0, +event.target.value]);\n  };\n\n  const applyStep = (event) => {\n    setStep(+event.target.value);\n  };\n\n  const resetAll = () => {\n    setItemWidth(130);\n    document.querySelector('#itemWidth').value = 130;\n    setFrameSize(3);\n    setStep(3);\n    setCurrentI([0, 3]);\n  };\n\n  const applyInfinity = () => {\n    disablePrev(false);\n    disableNext(false);\n    setInfinity(true);\n  };\n\n  const disapplyInfinity = () => {\n    disablePrev(true);\n    setCurrentI([0, frameSize]);\n    setInfinity(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Carousel</h1>\n\n      <main className=\"main\">\n        <Carousel\n          images={currentI[0] < currentI[1]\n            ? images.filter((_, i) => i >= currentI[0] && i < currentI[1])\n            : [\n              ...images.filter((_, i) => i >= currentI[0]),\n              ...images.filter((_, i) => i < currentI[1]),\n            ]}\n          itemWidth={itemWidth}\n        />\n\n        <Sliders\n          showPrevious={showPrevious}\n          showNext={showNext}\n          prevClass={prevButtonClass}\n          nextClass={nextButtonClass}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          isInfinite={isInfinite}\n          applyItemWidth={applyItemWidth}\n          resetItemWidth={resetItemWidth}\n          applyFrameSize={applyFrameSize}\n          applyStep={applyStep}\n          resetAll={resetAll}\n          applyInfinity={applyInfinity}\n          disapplyInfinity={disapplyInfinity}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}